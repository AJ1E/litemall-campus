package org.linlinjava.litemall.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class SicauCourierWithdrawExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public SicauCourierWithdrawExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public SicauCourierWithdrawExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public SicauCourierWithdrawExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        SicauCourierWithdrawExample example = new SicauCourierWithdrawExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public SicauCourierWithdrawExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public SicauCourierWithdrawExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCourierIdIsNull() {
            addCriterion("courier_id is null");
            return (Criteria) this;
        }

        public Criteria andCourierIdIsNotNull() {
            addCriterion("courier_id is not null");
            return (Criteria) this;
        }

        public Criteria andCourierIdEqualTo(Integer value) {
            addCriterion("courier_id =", value, "courierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andCourierIdEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("courier_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierIdNotEqualTo(Integer value) {
            addCriterion("courier_id <>", value, "courierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andCourierIdNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("courier_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierIdGreaterThan(Integer value) {
            addCriterion("courier_id >", value, "courierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andCourierIdGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("courier_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("courier_id >=", value, "courierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andCourierIdGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("courier_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierIdLessThan(Integer value) {
            addCriterion("courier_id <", value, "courierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andCourierIdLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("courier_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierIdLessThanOrEqualTo(Integer value) {
            addCriterion("courier_id <=", value, "courierId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andCourierIdLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("courier_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCourierIdIn(List<Integer> values) {
            addCriterion("courier_id in", values, "courierId");
            return (Criteria) this;
        }

        public Criteria andCourierIdNotIn(List<Integer> values) {
            addCriterion("courier_id not in", values, "courierId");
            return (Criteria) this;
        }

        public Criteria andCourierIdBetween(Integer value1, Integer value2) {
            addCriterion("courier_id between", value1, value2, "courierId");
            return (Criteria) this;
        }

        public Criteria andCourierIdNotBetween(Integer value1, Integer value2) {
            addCriterion("courier_id not between", value1, value2, "courierId");
            return (Criteria) this;
        }

        public Criteria andWithdrawSnIsNull() {
            addCriterion("withdraw_sn is null");
            return (Criteria) this;
        }

        public Criteria andWithdrawSnIsNotNull() {
            addCriterion("withdraw_sn is not null");
            return (Criteria) this;
        }

        public Criteria andWithdrawSnEqualTo(String value) {
            addCriterion("withdraw_sn =", value, "withdrawSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWithdrawSnEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("withdraw_sn = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawSnNotEqualTo(String value) {
            addCriterion("withdraw_sn <>", value, "withdrawSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWithdrawSnNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("withdraw_sn <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawSnGreaterThan(String value) {
            addCriterion("withdraw_sn >", value, "withdrawSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWithdrawSnGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("withdraw_sn > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawSnGreaterThanOrEqualTo(String value) {
            addCriterion("withdraw_sn >=", value, "withdrawSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWithdrawSnGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("withdraw_sn >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawSnLessThan(String value) {
            addCriterion("withdraw_sn <", value, "withdrawSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWithdrawSnLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("withdraw_sn < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawSnLessThanOrEqualTo(String value) {
            addCriterion("withdraw_sn <=", value, "withdrawSn");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWithdrawSnLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("withdraw_sn <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawSnLike(String value) {
            addCriterion("withdraw_sn like", value, "withdrawSn");
            return (Criteria) this;
        }

        public Criteria andWithdrawSnNotLike(String value) {
            addCriterion("withdraw_sn not like", value, "withdrawSn");
            return (Criteria) this;
        }

        public Criteria andWithdrawSnIn(List<String> values) {
            addCriterion("withdraw_sn in", values, "withdrawSn");
            return (Criteria) this;
        }

        public Criteria andWithdrawSnNotIn(List<String> values) {
            addCriterion("withdraw_sn not in", values, "withdrawSn");
            return (Criteria) this;
        }

        public Criteria andWithdrawSnBetween(String value1, String value2) {
            addCriterion("withdraw_sn between", value1, value2, "withdrawSn");
            return (Criteria) this;
        }

        public Criteria andWithdrawSnNotBetween(String value1, String value2) {
            addCriterion("withdraw_sn not between", value1, value2, "withdrawSn");
            return (Criteria) this;
        }

        public Criteria andWithdrawAmountIsNull() {
            addCriterion("withdraw_amount is null");
            return (Criteria) this;
        }

        public Criteria andWithdrawAmountIsNotNull() {
            addCriterion("withdraw_amount is not null");
            return (Criteria) this;
        }

        public Criteria andWithdrawAmountEqualTo(BigDecimal value) {
            addCriterion("withdraw_amount =", value, "withdrawAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWithdrawAmountEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("withdraw_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawAmountNotEqualTo(BigDecimal value) {
            addCriterion("withdraw_amount <>", value, "withdrawAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWithdrawAmountNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("withdraw_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawAmountGreaterThan(BigDecimal value) {
            addCriterion("withdraw_amount >", value, "withdrawAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWithdrawAmountGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("withdraw_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("withdraw_amount >=", value, "withdrawAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWithdrawAmountGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("withdraw_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawAmountLessThan(BigDecimal value) {
            addCriterion("withdraw_amount <", value, "withdrawAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWithdrawAmountLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("withdraw_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("withdraw_amount <=", value, "withdrawAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWithdrawAmountLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("withdraw_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawAmountIn(List<BigDecimal> values) {
            addCriterion("withdraw_amount in", values, "withdrawAmount");
            return (Criteria) this;
        }

        public Criteria andWithdrawAmountNotIn(List<BigDecimal> values) {
            addCriterion("withdraw_amount not in", values, "withdrawAmount");
            return (Criteria) this;
        }

        public Criteria andWithdrawAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("withdraw_amount between", value1, value2, "withdrawAmount");
            return (Criteria) this;
        }

        public Criteria andWithdrawAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("withdraw_amount not between", value1, value2, "withdrawAmount");
            return (Criteria) this;
        }

        public Criteria andFeeAmountIsNull() {
            addCriterion("fee_amount is null");
            return (Criteria) this;
        }

        public Criteria andFeeAmountIsNotNull() {
            addCriterion("fee_amount is not null");
            return (Criteria) this;
        }

        public Criteria andFeeAmountEqualTo(BigDecimal value) {
            addCriterion("fee_amount =", value, "feeAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andFeeAmountEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("fee_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFeeAmountNotEqualTo(BigDecimal value) {
            addCriterion("fee_amount <>", value, "feeAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andFeeAmountNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("fee_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFeeAmountGreaterThan(BigDecimal value) {
            addCriterion("fee_amount >", value, "feeAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andFeeAmountGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("fee_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFeeAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("fee_amount >=", value, "feeAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andFeeAmountGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("fee_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFeeAmountLessThan(BigDecimal value) {
            addCriterion("fee_amount <", value, "feeAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andFeeAmountLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("fee_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFeeAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("fee_amount <=", value, "feeAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andFeeAmountLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("fee_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFeeAmountIn(List<BigDecimal> values) {
            addCriterion("fee_amount in", values, "feeAmount");
            return (Criteria) this;
        }

        public Criteria andFeeAmountNotIn(List<BigDecimal> values) {
            addCriterion("fee_amount not in", values, "feeAmount");
            return (Criteria) this;
        }

        public Criteria andFeeAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("fee_amount between", value1, value2, "feeAmount");
            return (Criteria) this;
        }

        public Criteria andFeeAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("fee_amount not between", value1, value2, "feeAmount");
            return (Criteria) this;
        }

        public Criteria andActualAmountIsNull() {
            addCriterion("actual_amount is null");
            return (Criteria) this;
        }

        public Criteria andActualAmountIsNotNull() {
            addCriterion("actual_amount is not null");
            return (Criteria) this;
        }

        public Criteria andActualAmountEqualTo(BigDecimal value) {
            addCriterion("actual_amount =", value, "actualAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andActualAmountEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("actual_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActualAmountNotEqualTo(BigDecimal value) {
            addCriterion("actual_amount <>", value, "actualAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andActualAmountNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("actual_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActualAmountGreaterThan(BigDecimal value) {
            addCriterion("actual_amount >", value, "actualAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andActualAmountGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("actual_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActualAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("actual_amount >=", value, "actualAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andActualAmountGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("actual_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActualAmountLessThan(BigDecimal value) {
            addCriterion("actual_amount <", value, "actualAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andActualAmountLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("actual_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActualAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("actual_amount <=", value, "actualAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andActualAmountLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("actual_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActualAmountIn(List<BigDecimal> values) {
            addCriterion("actual_amount in", values, "actualAmount");
            return (Criteria) this;
        }

        public Criteria andActualAmountNotIn(List<BigDecimal> values) {
            addCriterion("actual_amount not in", values, "actualAmount");
            return (Criteria) this;
        }

        public Criteria andActualAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("actual_amount between", value1, value2, "actualAmount");
            return (Criteria) this;
        }

        public Criteria andActualAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("actual_amount not between", value1, value2, "actualAmount");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andWxTransferIdIsNull() {
            addCriterion("wx_transfer_id is null");
            return (Criteria) this;
        }

        public Criteria andWxTransferIdIsNotNull() {
            addCriterion("wx_transfer_id is not null");
            return (Criteria) this;
        }

        public Criteria andWxTransferIdEqualTo(String value) {
            addCriterion("wx_transfer_id =", value, "wxTransferId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWxTransferIdEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("wx_transfer_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWxTransferIdNotEqualTo(String value) {
            addCriterion("wx_transfer_id <>", value, "wxTransferId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWxTransferIdNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("wx_transfer_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWxTransferIdGreaterThan(String value) {
            addCriterion("wx_transfer_id >", value, "wxTransferId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWxTransferIdGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("wx_transfer_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWxTransferIdGreaterThanOrEqualTo(String value) {
            addCriterion("wx_transfer_id >=", value, "wxTransferId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWxTransferIdGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("wx_transfer_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWxTransferIdLessThan(String value) {
            addCriterion("wx_transfer_id <", value, "wxTransferId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWxTransferIdLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("wx_transfer_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWxTransferIdLessThanOrEqualTo(String value) {
            addCriterion("wx_transfer_id <=", value, "wxTransferId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andWxTransferIdLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("wx_transfer_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWxTransferIdLike(String value) {
            addCriterion("wx_transfer_id like", value, "wxTransferId");
            return (Criteria) this;
        }

        public Criteria andWxTransferIdNotLike(String value) {
            addCriterion("wx_transfer_id not like", value, "wxTransferId");
            return (Criteria) this;
        }

        public Criteria andWxTransferIdIn(List<String> values) {
            addCriterion("wx_transfer_id in", values, "wxTransferId");
            return (Criteria) this;
        }

        public Criteria andWxTransferIdNotIn(List<String> values) {
            addCriterion("wx_transfer_id not in", values, "wxTransferId");
            return (Criteria) this;
        }

        public Criteria andWxTransferIdBetween(String value1, String value2) {
            addCriterion("wx_transfer_id between", value1, value2, "wxTransferId");
            return (Criteria) this;
        }

        public Criteria andWxTransferIdNotBetween(String value1, String value2) {
            addCriterion("wx_transfer_id not between", value1, value2, "wxTransferId");
            return (Criteria) this;
        }

        public Criteria andFailReasonIsNull() {
            addCriterion("fail_reason is null");
            return (Criteria) this;
        }

        public Criteria andFailReasonIsNotNull() {
            addCriterion("fail_reason is not null");
            return (Criteria) this;
        }

        public Criteria andFailReasonEqualTo(String value) {
            addCriterion("fail_reason =", value, "failReason");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andFailReasonEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("fail_reason = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFailReasonNotEqualTo(String value) {
            addCriterion("fail_reason <>", value, "failReason");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andFailReasonNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("fail_reason <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFailReasonGreaterThan(String value) {
            addCriterion("fail_reason >", value, "failReason");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andFailReasonGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("fail_reason > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFailReasonGreaterThanOrEqualTo(String value) {
            addCriterion("fail_reason >=", value, "failReason");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andFailReasonGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("fail_reason >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFailReasonLessThan(String value) {
            addCriterion("fail_reason <", value, "failReason");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andFailReasonLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("fail_reason < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFailReasonLessThanOrEqualTo(String value) {
            addCriterion("fail_reason <=", value, "failReason");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andFailReasonLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("fail_reason <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFailReasonLike(String value) {
            addCriterion("fail_reason like", value, "failReason");
            return (Criteria) this;
        }

        public Criteria andFailReasonNotLike(String value) {
            addCriterion("fail_reason not like", value, "failReason");
            return (Criteria) this;
        }

        public Criteria andFailReasonIn(List<String> values) {
            addCriterion("fail_reason in", values, "failReason");
            return (Criteria) this;
        }

        public Criteria andFailReasonNotIn(List<String> values) {
            addCriterion("fail_reason not in", values, "failReason");
            return (Criteria) this;
        }

        public Criteria andFailReasonBetween(String value1, String value2) {
            addCriterion("fail_reason between", value1, value2, "failReason");
            return (Criteria) this;
        }

        public Criteria andFailReasonNotBetween(String value1, String value2) {
            addCriterion("fail_reason not between", value1, value2, "failReason");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andSuccessTimeIsNull() {
            addCriterion("success_time is null");
            return (Criteria) this;
        }

        public Criteria andSuccessTimeIsNotNull() {
            addCriterion("success_time is not null");
            return (Criteria) this;
        }

        public Criteria andSuccessTimeEqualTo(LocalDateTime value) {
            addCriterion("success_time =", value, "successTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andSuccessTimeEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("success_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuccessTimeNotEqualTo(LocalDateTime value) {
            addCriterion("success_time <>", value, "successTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andSuccessTimeNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("success_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuccessTimeGreaterThan(LocalDateTime value) {
            addCriterion("success_time >", value, "successTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andSuccessTimeGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("success_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuccessTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("success_time >=", value, "successTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andSuccessTimeGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("success_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuccessTimeLessThan(LocalDateTime value) {
            addCriterion("success_time <", value, "successTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andSuccessTimeLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("success_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuccessTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("success_time <=", value, "successTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andSuccessTimeLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("success_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuccessTimeIn(List<LocalDateTime> values) {
            addCriterion("success_time in", values, "successTime");
            return (Criteria) this;
        }

        public Criteria andSuccessTimeNotIn(List<LocalDateTime> values) {
            addCriterion("success_time not in", values, "successTime");
            return (Criteria) this;
        }

        public Criteria andSuccessTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("success_time between", value1, value2, "successTime");
            return (Criteria) this;
        }

        public Criteria andSuccessTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("success_time not between", value1, value2, "successTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(SicauCourierWithdraw.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        private SicauCourierWithdrawExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        protected Criteria(SicauCourierWithdrawExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public SicauCourierWithdrawExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(SicauCourierWithdraw.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(SicauCourierWithdraw.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table sicau_courier_withdraw
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sicau_courier_withdraw
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table sicau_courier_withdraw
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.SicauCourierWithdrawExample example);
    }
}