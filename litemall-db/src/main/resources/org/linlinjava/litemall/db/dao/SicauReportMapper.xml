<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.SicauReportMapper">
  
  <!-- 结果映射 -->
  <resultMap id="BaseResultMap" type="org.linlinjava.litemall.db.domain.SicauReport">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="reporter_id" jdbcType="INTEGER" property="reporterId" />
    <result column="reported_id" jdbcType="INTEGER" property="reportedId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="images" jdbcType="VARCHAR" property="images" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="handler_admin_id" jdbcType="INTEGER" property="handlerAdminId" />
    <result column="handle_result" jdbcType="VARCHAR" property="handleResult" />
    <result column="handle_time" jdbcType="TIMESTAMP" property="handleTime" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  
  <!-- 基础列列表 -->
  <sql id="Base_Column_List">
    id, order_id, reporter_id, reported_id, `type`, reason, images, `status`,
    handler_admin_id, handle_result, handle_time, add_time, update_time, deleted
  </sql>
  
  <!-- 根据主键查询 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sicau_report
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 根据订单ID查询举报记录 -->
  <select id="selectByOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sicau_report
    where order_id = #{orderId,jdbcType=INTEGER}
    and deleted = 0
    order by add_time desc
  </select>
  
  <!-- 查询用户发起的举报列表 -->
  <select id="selectByReporter" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sicau_report
    where reporter_id = #{reporterId,jdbcType=INTEGER}
    <if test="status != null">
      and `status` = #{status,jdbcType=TINYINT}
    </if>
    and deleted = 0
    order by add_time desc
    limit #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
  </select>
  
  <!-- 查询针对某用户的举报列表 -->
  <select id="selectByReported" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sicau_report
    where reported_id = #{reportedId,jdbcType=INTEGER}
    <if test="status != null">
      and `status` = #{status,jdbcType=TINYINT}
    </if>
    and deleted = 0
    order by add_time desc
    limit #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
  </select>
  
  <!-- 查询所有举报列表（管理员用） -->
  <select id="selectAllReports" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sicau_report
    where deleted = 0
    <if test="status != null">
      and `status` = #{status,jdbcType=TINYINT}
    </if>
    <if test="type != null">
      and `type` = #{type,jdbcType=TINYINT}
    </if>
    order by 
      case when `status` = 0 then 0 
           when `status` = 1 then 1 
           else 2 
      end,
      add_time asc
    limit #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
  </select>
  
  <!-- 统计用户发起的举报数量 -->
  <select id="countByReporter" resultType="java.lang.Long">
    select count(*)
    from sicau_report
    where reporter_id = #{reporterId,jdbcType=INTEGER}
    <if test="status != null">
      and `status` = #{status,jdbcType=TINYINT}
    </if>
    and deleted = 0
  </select>
  
  <!-- 统计针对某用户的举报数量 -->
  <select id="countByReported" resultType="java.lang.Long">
    select count(*)
    from sicau_report
    where reported_id = #{reportedId,jdbcType=INTEGER}
    <if test="status != null">
      and `status` = #{status,jdbcType=TINYINT}
    </if>
    and deleted = 0
  </select>
  
  <!-- 统计所有举报数量（管理员用） -->
  <select id="countAllReports" resultType="java.lang.Long">
    select count(*)
    from sicau_report
    where deleted = 0
    <if test="status != null">
      and `status` = #{status,jdbcType=TINYINT}
    </if>
    <if test="type != null">
      and `type` = #{type,jdbcType=TINYINT}
    </if>
  </select>
  
  <!-- 根据主键删除 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sicau_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- 插入所有字段 -->
  <insert id="insert" parameterType="org.linlinjava.litemall.db.domain.SicauReport">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sicau_report (id, order_id, reporter_id, 
      reported_id, `type`, reason, images, `status`,
      handler_admin_id, handle_result, handle_time, 
      add_time, update_time, deleted)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{reporterId,jdbcType=INTEGER}, 
      #{reportedId,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{reason,jdbcType=VARCHAR}, 
      #{images,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT},
      #{handlerAdminId,jdbcType=INTEGER}, #{handleResult,jdbcType=VARCHAR}, 
      #{handleTime,jdbcType=TIMESTAMP}, #{addTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})
  </insert>
  
  <!-- 插入非空字段 -->
  <insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.SicauReport">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sicau_report
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="reporterId != null">
        reporter_id,
      </if>
      <if test="reportedId != null">
        reported_id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="images != null">
        images,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="handlerAdminId != null">
        handler_admin_id,
      </if>
      <if test="handleResult != null">
        handle_result,
      </if>
      <if test="handleTime != null">
        handle_time,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="reporterId != null">
        #{reporterId,jdbcType=INTEGER},
      </if>
      <if test="reportedId != null">
        #{reportedId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        #{images,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="handlerAdminId != null">
        #{handlerAdminId,jdbcType=INTEGER},
      </if>
      <if test="handleResult != null">
        #{handleResult,jdbcType=VARCHAR},
      </if>
      <if test="handleTime != null">
        #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  
  <!-- 根据主键更新非空字段 -->
  <update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.SicauReport">
    update sicau_report
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="reporterId != null">
        reporter_id = #{reporterId,jdbcType=INTEGER},
      </if>
      <if test="reportedId != null">
        reported_id = #{reportedId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=TINYINT},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="images != null">
        images = #{images,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="handlerAdminId != null">
        handler_admin_id = #{handlerAdminId,jdbcType=INTEGER},
      </if>
      <if test="handleResult != null">
        handle_result = #{handleResult,jdbcType=VARCHAR},
      </if>
      <if test="handleTime != null">
        handle_time = #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 根据主键更新所有字段 -->
  <update id="updateByPrimaryKey" parameterType="org.linlinjava.litemall.db.domain.SicauReport">
    update sicau_report
    set order_id = #{orderId,jdbcType=INTEGER},
      reporter_id = #{reporterId,jdbcType=INTEGER},
      reported_id = #{reportedId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=TINYINT},
      reason = #{reason,jdbcType=VARCHAR},
      images = #{images,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      handler_admin_id = #{handlerAdminId,jdbcType=INTEGER},
      handle_result = #{handleResult,jdbcType=VARCHAR},
      handle_time = #{handleTime,jdbcType=TIMESTAMP},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
